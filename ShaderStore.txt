char basicvertex[] = 
	"#version 330 core\n"
        "layout(location = 0) in vec4 position;\n"
        "void main(){\n"
        "   gl_Position = position;\n"
        "}\n";

char basicfragment[] = 
	"#version 330 core\n"
        "layout(location = 0) out vec4 color;\n"
        "void main(){\n"
        "   color = vec4(1.0, 1.0, 1.0, 1.0);\n"
        "}\n";

char greenfragment[] = 
	"#version 330 core\n"
        "layout(location = 0) out vec4 color;\n"
        "void main(){\n"
        "   color = vec4(0.0, 0.75, 0.0, 1.0);\n"
        "}\n";

char pulsefragment[] = 
	"#version 330 core\n"
	"layout(location = 0) out vec4 color;\n"
	"uniform vec4 u_Color;\n"
	"void main(){\n"
	"   color = u_Color;\n"
	"}\n";

char euclideanfragment[] =
	"#version 330 core\n"
	"layout(location = 0) out vec4 color;\n"
	"layout(origin_upper_left) in vec4 gl_FragCoord;\n"
	"uniform float u_height;\n"
	"uniform float u_width;\n"
	"uniform int u_seedx[50];\n"
	"uniform int u_seedy[50];\n"
	"uniform float u_seedc[150];\n"
	"void main(){\n"
	"	float x = gl_FragCoord.x;\n"
	"	float y = gl_FragCoord.y;\n"
	"	int n = 0;"
	"	float maxdistance = sqrt((u_height * u_height) + (u_width * u_width));\n"
	"	float dist = maxdistance;\n"
	"	float distancecurrent;\n"
	"	for(int i = 0; i < 50; i++){\n"
	"		distancecurrent = sqrt( ( (x - float(u_seedx[i])) * (x - float(u_seedx[i])) ) + ( (y - float(u_seedy[i])) * (y - float(u_seedy[i])) ) );\n"
	"		if(distancecurrent < dist){\n"
	"			dist = distancecurrent;\n"
	"			n = i;\n"
	"		}\n"
	"	}\n"
	"	if(dist < 5){\n"
	"		color = vec4(0.0f, 0.0f, 0.0f, 1.0f);\n"
	"	}\n"
	"	else{\n"
	"		color = vec4(u_seedc[(n*3)+0], u_seedc[(n*3)+1], u_seedc[(n*3)+2], 1.0f);\n"
	"	}\n"
	"}\n";

char euclideanfragmentnoseeds[] =
	"#version 330 core\n"
	"layout(location = 0) out vec4 color;\n"
	"layout(origin_upper_left) in vec4 gl_FragCoord;\n"
	"uniform float u_height;\n"
	"uniform float u_width;\n"
	"uniform int u_seedx[50];\n"
	"uniform int u_seedy[50];\n"
	"uniform float u_seedc[150];\n"
	"void main(){\n"
	"	float x = gl_FragCoord.x;\n"
	"	float y = gl_FragCoord.y;\n"
	"	int n = 0;"
	"	float maxdistance = sqrt((u_height * u_height) + (u_width * u_width));\n"
	"	float dist = maxdistance;\n"
	"	float distancecurrent;\n"
	"	for(int i = 0; i < 50; i++){\n"
	"		distancecurrent = sqrt( ( (x - float(u_seedx[i])) * (x - float(u_seedx[i])) ) + ( (y - float(u_seedy[i])) * (y - float(u_seedy[i])) ) );\n"
	"		if(distancecurrent < dist){\n"
	"			dist = distancecurrent;\n"
	"			n = i;\n"
	"		}\n"
	"	}\n"
	"	color = vec4(u_seedc[(n*3)+0], u_seedc[(n*3)+1], u_seedc[(n*3)+2], 1.0f);\n"
	"}\n";


char particlefragment[] = 
	"#version 330 core\n"
	"layout(location = 0) out vec4 color;\n"
	"layout(origin_upper_left) in vec4 gl_FragCoord;\n"
	"uniform float u_height;\n"
	"uniform float u_width;\n"
	"uniform int u_seedx[50];\n"
	"uniform int u_seedy[50];\n"
	"uniform float u_seedc[150];\n"
	"void main(){\n"
	"	float x = gl_FragCoord.x;\n"
	"	float y = gl_FragCoord.y;\n"
	"	float maxdistance = sqrt((u_height * u_height) + (u_width * u_width));\n"
	"	float dist = maxdistance;\n"
	"	float distancecurrent;\n"
	"	for(int i = 0; i < 50; i++){\n"
	"		distancecurrent = sqrt( ( (x - float(u_seedx[i])) * (x - float(u_seedx[i])) ) + ( (y - float(u_seedy[i])) * (y - float(u_seedy[i])) ) );\n"
	"		if(distancecurrent < dist){\n"
	"			dist = distancecurrent;\n"
	"		}\n"
	"	}\n"
	"	if(dist < 10){\n"
	"		color = vec4(1.0f, 1.0f, 1.0f, 1.0f);\n"
	"	}\n"
	"	else{\n"
	"		color = vec4(0.0f, 0.0f, 0.0f, 1.0f);\n"
	"	}\n"
	"}\n";